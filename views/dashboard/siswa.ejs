<!DOCTYPE html>
<html lang="id">

<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Dashboard Siswa - E-Learning</title>
   <style>
      * {
         margin: 0;
         padding: 0;
         box-sizing: border-box;
      }

      body {
         font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
         background: #f5f7fa;
         min-height: 100vh;
      }

      .header {
         background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
         color: white;
         padding: 1rem 2rem;
         display: flex;
         justify-content: space-between;
         align-items: center;
         box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }

      .user-info {
         display: flex;
         align-items: center;
         gap: 1rem;
      }

      .logout-btn {
         background: rgba(255, 255, 255, 0.2);
         border: 1px solid rgba(255, 255, 255, 0.3);
         color: white;
         padding: 0.5rem 1rem;
         border-radius: 5px;
         cursor: pointer;
         transition: background 0.3s;
      }

      .logout-btn:hover {
         background: rgba(255, 255, 255, 0.3);
      }

      .main-content {
         display: grid;
         grid-template-columns: 250px 1fr;
         min-height: calc(100vh - 80px);
      }

      .sidebar {
         background: white;
         box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
         padding: 2rem 0;
      }

      .nav-item {
         padding: 1rem 2rem;
         cursor: pointer;
         transition: all 0.3s;
         border-left: 3px solid transparent;
      }

      .nav-item:hover,
      .nav-item.active {
         background: #f0f8ff;
         border-left-color: #3498db;
         color: #3498db;
      }

      .content-area {
         padding: 2rem;
      }

      .page-section {
         display: none;
      }

      .page-section.active {
         display: block;
      }

      .stats-grid {
         display: grid;
         grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
         gap: 1.5rem;
         margin-bottom: 2rem;
      }

      .stat-card {
         background: white;
         padding: 2rem;
         border-radius: 10px;
         box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
         text-align: center;
      }

      .stat-value {
         font-size: 2.5rem;
         font-weight: bold;
         color: #3498db;
         margin-bottom: 0.5rem;
      }

      .stat-label {
         color: #666;
         font-size: 0.9rem;
      }

      .card {
         background: white;
         border-radius: 10px;
         padding: 2rem;
         margin-bottom: 1.5rem;
         box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      }

      .card-title {
         font-size: 1.2rem;
         font-weight: 600;
         color: #333;
         margin-bottom: 1rem;
      }

      .btn {
         background: linear-gradient(135deg, #3498db 0%, #2980b9 100%);
         color: white;
         border: none;
         padding: 0.75rem 1.5rem;
         border-radius: 5px;
         cursor: pointer;
         font-weight: 600;
         transition: transform 0.2s;
         text-decoration: none;
         display: inline-block;
      }

      .btn:hover {
         transform: translateY(-2px);
      }

      .btn-success {
         background: linear-gradient(135deg, #2ecc71 0%, #27ae60 100%);
      }

      .btn-warning {
         background: linear-gradient(135deg, #f39c12 0%, #e67e22 100%);
      }

      .btn-danger {
         background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
      }

      .alert {
         padding: 1rem;
         border-radius: 5px;
         margin-bottom: 1rem;
         display: none;
      }

      .alert-success {
         background: #d4edda;
         color: #155724;
         border: 1px solid #c3e6cb;
      }

      .alert-error {
         background: #f8d7da;
         color: #721c24;
         border: 1px solid #f5c6cb;
      }

      .materi-grid {
         display: grid;
         grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
         gap: 1.5rem;
         margin-top: 1rem;
      }

      .materi-card {
         background: white;
         border-radius: 10px;
         box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
         padding: 1.5rem;
         transition: transform 0.2s, box-shadow 0.2s;
      }

      .materi-card:hover {
         transform: translateY(-2px);
         box-shadow: 0 6px 12px rgba(0, 0, 0, 0.15);
      }

      .materi-title {
         color: #3498db;
         font-size: 1.1rem;
         font-weight: 600;
         margin-bottom: 0.75rem;
      }

      .materi-guru {
         color: #666;
         font-size: 0.9rem;
         margin-bottom: 1rem;
      }

      .materi-content {
         color: #333;
         line-height: 1.5;
         margin-bottom: 1.5rem;
         display: -webkit-box;
         -webkit-line-clamp: 3;
         line-clamp: 3;
         -webkit-box-orient: vertical;
         overflow: hidden;
      }

      .tugas-grid {
         display: grid;
         grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
         gap: 1.5rem;
         margin-top: 1rem;
      }

      .tugas-card {
         background: white;
         border-radius: 10px;
         box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
         padding: 1.5rem;
         border-left: 4px solid #3498db;
      }

      .tugas-header {
         display: flex;
         justify-content: space-between;
         align-items: flex-start;
         margin-bottom: 1rem;
      }

      .tugas-title {
         color: #333;
         font-size: 1.1rem;
         font-weight: 600;
      }

      .tugas-status {
         padding: 0.25rem 0.75rem;
         border-radius: 15px;
         font-size: 0.8rem;
         font-weight: 600;
         text-transform: capitalize;
      }

      .status-belum_dikerjakan {
         background: #ffeaa7;
         color: #d63031;
      }

      .status-dikerjakan {
         background: #74b9ff;
         color: white;
      }

      .status-selesai {
         background: #00b894;
         color: white;
      }

      .tugas-materi {
         color: #3498db;
         font-size: 0.9rem;
         margin-bottom: 0.5rem;
      }

      .tugas-deadline {
         color: #e74c3c;
         font-size: 0.9rem;
         margin-bottom: 1rem;
      }

      .tugas-description {
         color: #666;
         line-height: 1.5;
         margin-bottom: 1.5rem;
      }

      .tugas-nilai {
         background: #f8f9ff;
         padding: 1rem;
         border-radius: 5px;
         margin-bottom: 1rem;
      }

      .progress-container {
         background: #f8f9ff;
         border-radius: 10px;
         padding: 1.5rem;
         margin-bottom: 1.5rem;
      }

      .progress-bar {
         background: #e1e5e9;
         border-radius: 10px;
         height: 20px;
         margin: 1rem 0;
         overflow: hidden;
      }

      .progress-fill {
         height: 100%;
         background: linear-gradient(90deg, #3498db, #2980b9);
         transition: width 0.3s ease;
         display: flex;
         align-items: center;
         justify-content: center;
         color: white;
         font-weight: 600;
         font-size: 0.8rem;
      }

      .modal-overlay {
         position: fixed;
         top: 0;
         left: 0;
         width: 100%;
         height: 100%;
         background: rgba(0, 0, 0, 0.5);
         display: flex;
         justify-content: center;
         align-items: center;
         z-index: 1000;
         display: none;
      }

      .modal-content {
         background: white;
         border-radius: 10px;
         width: 90%;
         max-width: 600px;
         max-height: 80vh;
         overflow-y: auto;
         box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
      }

      .modal-header {
         display: flex;
         justify-content: space-between;
         align-items: center;
         padding: 1.5rem;
         border-bottom: 1px solid #e1e5e9;
      }

      .modal-header h3 {
         margin: 0;
         color: #333;
      }

      .modal-close {
         background: none;
         border: none;
         font-size: 1.5rem;
         cursor: pointer;
         color: #666;
         padding: 0;
         width: 30px;
         height: 30px;
         display: flex;
         align-items: center;
         justify-content: center;
      }

      .modal-close:hover {
         color: #333;
      }

      .modal-body {
         padding: 1.5rem;
      }

      .form-group {
         margin-bottom: 1rem;
      }

      .form-group label {
         display: block;
         margin-bottom: 0.5rem;
         color: #333;
         font-weight: 500;
      }

      .form-group input,
      .form-group textarea {
         width: 100%;
         padding: 0.75rem;
         border: 2px solid #e1e5e9;
         border-radius: 5px;
         font-size: 1rem;
      }

      .form-group textarea {
         resize: vertical;
         min-height: 100px;
      }

      .diskusi-container {
         background: #f8f9ff;
         border-radius: 10px;
         padding: 1.5rem;
         margin-bottom: 1.5rem;
      }

      .diskusi-item {
         background: white;
         border-radius: 8px;
         padding: 1rem;
         margin-bottom: 1rem;
         border-left: 3px solid #3498db;
      }

      .diskusi-header {
         display: flex;
         justify-content: space-between;
         align-items: center;
         margin-bottom: 0.75rem;
      }

      .diskusi-user {
         color: #3498db;
         font-weight: 600;
         font-size: 0.9rem;
      }

      .diskusi-date {
         color: #666;
         font-size: 0.8rem;
      }

      .diskusi-content {
         color: #333;
         line-height: 1.5;
      }

      .nilai-badge {
         display: inline-block;
         background: linear-gradient(135deg, #3498db, #2980b9);
         color: white;
         padding: 0.5rem 1rem;
         border-radius: 20px;
         font-weight: 600;
         font-size: 1.1rem;
      }

      .loading {
         text-align: center;
         padding: 2rem;
         color: #666;
      }

      .empty-state {
         text-align: center;
         padding: 2rem;
         color: #666;
      }
   </style>
</head>

<body>
   <div class="header">
      <div>
         <h1>Dashboard Siswa</h1>
         <p>Sistem Pembelajaran E-Learning</p>
      </div>
      <div class="user-info">
         <span id="userGreeting">Selamat datang, <%= user.nama %></span>
         <button class="logout-btn" onclick="logout()">Logout</button>
      </div>
   </div>

   <div class="main-content">
      <div class="sidebar">
         <div class="nav-item active" onclick="showSection('dashboard')">📊 Dashboard</div>
         <div class="nav-item" onclick="showSection('materi-pembelajaran')">📚 Materi Pembelajaran</div>
         <div class="nav-item" onclick="showSection('tugas-saya')">📝 Tugas Saya</div>
         <div class="nav-item" onclick="showSection('nilai-saya')">🎯 Nilai Saya</div>
         <div class="nav-item" onclick="showSection('diskusi')">💬 Diskusi</div>
         <div class="nav-item" onclick="showSection('progress')">📈 Progress Belajar</div>
      </div>

      <div class="content-area">
         <div id="alert" class="alert">
            <span id="alertMessage"></span>
         </div>

         <!-- Dashboard Section -->
         <div id="dashboard" class="page-section active">
            <h2>Ringkasan Pembelajaran</h2>

            <div class="stats-grid">
               <div class="stat-card">
                  <div class="stat-value" id="totalMateri">0</div>
                  <div class="stat-label">Materi Tersedia</div>
               </div>
               <div class="stat-card">
                  <div class="stat-value" id="tugasSelesai">0</div>
                  <div class="stat-label">Tugas Selesai</div>
               </div>
               <div class="stat-card">
                  <div class="stat-value" id="tugasPending">0</div>
                  <div class="stat-label">Tugas Pending</div>
               </div>
               <div class="stat-card">
                  <div class="stat-value" id="rataRataNilai">0</div>
                  <div class="stat-label">Rata-rata Nilai</div>
               </div>
            </div>

            <div class="progress-container">
               <h3 style="color: #3498db; margin-bottom: 1rem;">Progress Pembelajaran Anda</h3>
               <div class="progress-bar">
                  <div class="progress-fill" id="overallProgress" style="width: 0%">0%</div>
               </div>
               <p style="color: #666; margin-top: 0.5rem;">Terus semangat belajar!</p>
            </div>

            <div class="card">
               <div class="card-title">Tugas Terbaru</div>
               <div id="recentTugas">
                  <div class="loading">Loading tugas terbaru...</div>
               </div>
            </div>
         </div>

         <!-- Materi Pembelajaran Section -->
         <div id="materi-pembelajaran" class="page-section">
            <h2>Materi Pembelajaran</h2>
            <div class="materi-grid" id="materiGrid">
               <div class="loading">Memuat materi pembelajaran...</div>
            </div>
         </div>

         <!-- Tugas Saya Section -->
         <div id="tugas-saya" class="page-section">
            <h2>Daftar Tugas</h2>
            <div class="tugas-grid" id="tugasGrid">
               <div class="loading">Memuat daftar tugas...</div>
            </div>
         </div>

         <!-- Nilai Saya Section -->
         <div id="nilai-saya" class="page-section">
            <h2>Nilai dan Hasil Pembelajaran</h2>

            <div class="card">
               <div class="card-title">Ringkasan Nilai</div>
               <div id="nilaiSummary">
                  <div class="loading">Memuat ringkasan nilai...</div>
               </div>
            </div>

            <div class="card">
               <div class="card-title">Detail Nilai per Tugas</div>
               <div id="detailNilai">
                  <div class="loading">Memuat detail nilai...</div>
               </div>
            </div>
         </div>

         <!-- Diskusi Section -->
         <div id="diskusi" class="page-section">
            <h2>Diskusi Pembelajaran</h2>

            <div class="card">
               <div class="card-title">Diskusi Kelas</div>
               <div id="diskusiKelas">
                  <div class="loading">Memuat diskusi kelas...</div>
               </div>
            </div>

            <div class="card">
               <div class="card-title">Diskusi Materi</div>
               <div id="diskusiMateri">
                  <div class="loading">Memuat diskusi materi...</div>
               </div>
            </div>

            <div class="card">
               <div class="card-title">Tambah Diskusi</div>
               <form id="addDiskusiForm">
                  <div class="form-group">
                     <label for="diskusiType">Jenis Diskusi</label>
                     <select id="diskusiType" required>
                        <option value="">-- Pilih Jenis --</option>
                        <option value="kelas">Diskusi Kelas</option>
                        <option value="materi">Diskusi Materi</option>
                     </select>
                  </div>
                  <div class="form-group" id="materiSelectGroup" style="display: none;">
                     <label for="diskusiMateri">Pilih Materi</label>
                     <select id="diskusiMateriSelect">
                        <option value="">-- Pilih Materi --</option>
                     </select>
                  </div>
                  <div class="form-group">
                     <label for="diskusiIsi">Isi Diskusi</label>
                     <textarea id="diskusiIsi" name="isi" rows="4" required></textarea>
                  </div>
                  <button type="submit" class="btn">Kirim Diskusi</button>
               </form>
            </div>
         </div>

         <!-- Progress Section -->
         <div id="progress" class="page-section">
            <h2>Progress Belajar Detail</h2>

            <div class="card">
               <div class="card-title">Statistik Pembelajaran</div>
               <div id="progressDetail">
                  <div class="loading">Memuat detail progress...</div>
               </div>
            </div>
         </div>
      </div>
   </div>

   <!-- Modal for Tugas Detail -->
   <div id="tugasModal" class="modal-overlay">
      <div class="modal-content">
         <div class="modal-header">
            <h3 id="modalTitle">Detail Tugas</h3>
            <button class="modal-close" onclick="closeModal()">&times;</button>
         </div>
         <div class="modal-body">
            <div id="modalContent"></div>
            <div id="tugasForm" style="display: none;">
               <div class="form-group">
                  <label for="tugasJawaban">Jawaban Anda</label>
                  <textarea id="tugasJawaban" rows="5" placeholder="Masukkan jawaban Anda di sini..."></textarea>
               </div>
               <button class="btn" onclick="submitTugas()">Kirim Jawaban</button>
            </div>
         </div>
      </div>
   </div>

   <script>
      // Global variables
      let currentData = {
         materi: [],
         tugas: [],
         nilai: [],
         diskusi: [],
         currentTugasId: null
      };

      // Utility functions
      function showAlert(message, type = 'success') {
         const alert = document.getElementById('alert');
         const alertMessage = document.getElementById('alertMessage');

         alert.className = `alert alert-${type}`;
         alertMessage.textContent = message;
         alert.style.display = 'block';

         setTimeout(() => {
            alert.style.display = 'none';
         }, 5000);
      }

      function formatDate(dateString) {
         if (!dateString) return '-';
         return new Date(dateString).toLocaleDateString('id-ID');
      }

      function formatDateTime(dateString) {
         if (!dateString) return '-';
         return new Date(dateString).toLocaleString('id-ID');
      }

      // API functions
      async function apiCall(endpoint, options = {}) {
         const defaultOptions = {
            method: 'GET',
            headers: {
               'Content-Type': 'application/json',
            },
            credentials: 'include'
         };

         try {
            const response = await fetch(endpoint, { ...defaultOptions, ...options });
            const data = await response.json();

            if (!response.ok) {
               throw new Error(data.message || data.error || 'API Error');
            }

            return data;
         } catch (error) {
            showAlert(error.message || 'Terjadi kesalahan', 'error');
            throw error;
         }
      }

      // Navigation functions
      function showSection(sectionId) {
         document.querySelectorAll('.page-section').forEach(section => {
            section.classList.remove('active');
         });
         document.querySelectorAll('.nav-item').forEach(item => {
            item.classList.remove('active');
         });

         document.getElementById(sectionId).classList.add('active');
         event.target.classList.add('active');

         // Load data for specific sections
         switch (sectionId) {
            case 'materi-pembelajaran':
               loadMateriList();
               break;
            case 'tugas-saya':
               loadTugasList();
               break;
            case 'nilai-saya':
               loadNilaiData();
               break;
            case 'diskusi':
               loadDiskusiData();
               loadMateriOptions();
               break;
            case 'progress':
               loadProgressDetail();
               break;
         }
      }

      // Dashboard functions
      async function loadDashboardData() {
         try {
            const stats = await apiCall('/siswa/dashboard/stats');
            updateDashboardStats(stats);

            const recentTugas = await apiCall('/siswa/activity/recent');
            displayRecentActivity(recentTugas.data);
         } catch (error) {
            console.error('Error loading dashboard:', error);
         }
      }

      function updateDashboardStats(stats) {
         document.getElementById('totalMateri').textContent = stats.total_materi || 0;
         document.getElementById('tugasSelesai').textContent = stats.tugas_selesai || 0;
         document.getElementById('tugasPending').textContent = stats.tugas_pending || 0;
         document.getElementById('rataRataNilai').textContent = stats.rata_nilai || 0;

         const progressBar = document.getElementById('overallProgress');
         const progress = stats.progress_overall || 0;
         progressBar.style.width = progress + '%';
         progressBar.textContent = progress + '%';
      }

      function displayRecentActivity(activities) {
         const container = document.getElementById('recentTugas');

         if (!activities || activities.length === 0) {
            container.innerHTML = '<div class="empty-state">Tidak ada tugas terbaru</div>';
            return;
         }

         container.innerHTML = activities.slice(0, 3).map(activity => `
            <div style="padding: 1rem 0; border-bottom: 1px solid #eee;">
               <strong>${activity.title}</strong>
               <div style="color: #666; font-size: 0.9rem;">${activity.description}</div>
               <div style="font-size: 0.8rem; color: #888;">${formatDateTime(activity.created_at)}</div>
            </div>
         `).join('');
      }

      // Materi functions
      async function loadMateriList() {
         const container = document.getElementById('materiGrid');

         try {
            const response = await apiCall('/siswa/materi');
            currentData.materi = response.data;
            displayMateriList(response.data);
         } catch (error) {
            container.innerHTML = '<div class="empty-state">Gagal memuat daftar materi</div>';
         }
      }

      function displayMateriList(materiList) {
         const container = document.getElementById('materiGrid');

         if (materiList.length === 0) {
            container.innerHTML = '<div class="empty-state">Belum ada materi tersedia</div>';
            return;
         }

         container.innerHTML = materiList.map(materi => `
            <div class="materi-card">
               <div class="materi-title">${materi.judul}</div>
               <div class="materi-guru">Pengampu: ${materi.guru_nama || 'Tidak diketahui'}</div>
               <div class="materi-content">${materi.deskripsi || materi.konten}</div>
               <button class="btn" onclick="viewMateri(${materi.id})">Baca Materi</button>
            </div>
         `).join('');
      }

      function viewMateri(id) {
         const materi = currentData.materi.find(m => m.id === id);
         if (materi) {
            document.getElementById('modalTitle').textContent = materi.judul;
            document.getElementById('modalContent').innerHTML = `
               <div style="margin-bottom: 1rem;">
                  <strong>Pengampu:</strong> ${materi.guru_nama || 'Tidak diketahui'}
               </div>
               <div style="line-height: 1.6;">${materi.konten}</div>
            `;
            document.getElementById('tugasForm').style.display = 'none';
            document.getElementById('tugasModal').style.display = 'flex';
         }
      }

      // Tugas functions
      async function loadTugasList() {
         const container = document.getElementById('tugasGrid');

         try {
            const response = await apiCall('/siswa/tugas');
            currentData.tugas = response.data;
            displayTugasList(response.data);
         } catch (error) {
            container.innerHTML = '<div class="empty-state">Gagal memuat daftar tugas</div>';
         }
      }

      function displayTugasList(tugasList) {
         const container = document.getElementById('tugasGrid');

         if (tugasList.length === 0) {
            container.innerHTML = '<div class="empty-state">Belum ada tugas tersedia</div>';
            return;
         }

         container.innerHTML = tugasList.map(tugas => `
            <div class="tugas-card">
               <div class="tugas-header">
                  <div class="tugas-title">${tugas.judul || 'Tugas ' + tugas.materi_judul}</div>
                  <span class="tugas-status status-${tugas.status}">${tugas.status.replace('_', ' ')}</span>
               </div>
               <div class="tugas-materi">Materi: ${tugas.materi_judul}</div>
               <div class="tugas-deadline">Deadline: ${formatDateTime(tugas.deadline)}</div>
               <div class="tugas-description">${tugas.deskripsi || 'Tidak ada deskripsi'}</div>
               
               ${tugas.nilai ? `
                  <div class="tugas-nilai">
                     <strong>Nilai: </strong>
                     <span class="nilai-badge">${tugas.nilai}</span>
                  </div>
               ` : ''}
               
               <div style="margin-top: 1rem;">
                  ${tugas.status === 'belum_dikerjakan' ? `
                     <button class="btn" onclick="workOnTugas(${tugas.id})">Kerjakan Tugas</button>
                  ` : tugas.status === 'dikerjakan' ? `
                     <button class="btn btn-warning" onclick="editTugas(${tugas.id})">Edit Jawaban</button>
                  ` : `
                     <button class="btn btn-success" onclick="viewTugasResult(${tugas.id})">Lihat Hasil</button>
                  `}
               </div>
            </div>
         `).join('');
      }

      function workOnTugas(id) {
         const tugas = currentData.tugas.find(t => t.id === id);
         if (tugas) {
            currentData.currentTugasId = id;
            document.getElementById('modalTitle').textContent = tugas.judul || 'Kerjakan Tugas';
            document.getElementById('modalContent').innerHTML = `
               <div style="margin-bottom: 1rem;">
                  <strong>Materi:</strong> ${tugas.materi_judul}
               </div>
               <div style="margin-bottom: 1rem;">
                  <strong>Deadline:</strong> ${formatDateTime(tugas.deadline)}
               </div>
               <div style="margin-bottom: 1rem; line-height: 1.6;">
                  <strong>Deskripsi:</strong><br>
                  ${tugas.deskripsi || 'Tidak ada deskripsi khusus'}
               </div>
            `;
            document.getElementById('tugasJawaban').value = tugas.jawaban || '';
            document.getElementById('tugasForm').style.display = 'block';
            document.getElementById('tugasModal').style.display = 'flex';
         }
      }

      function editTugas(id) {
         workOnTugas(id); // Same functionality as workOnTugas
      }

      function viewTugasResult(id) {
         const tugas = currentData.tugas.find(t => t.id === id);
         if (tugas) {
            document.getElementById('modalTitle').textContent = 'Hasil Tugas';
            document.getElementById('modalContent').innerHTML = `
               <div style="margin-bottom: 1rem;">
                  <strong>Tugas:</strong> ${tugas.judul || tugas.materi_judul}
               </div>
               <div style="margin-bottom: 1rem;">
                  <strong>Status:</strong> ${tugas.status.replace('_', ' ')}
               </div>
               <div style="margin-bottom: 1rem;">
                  <strong>Nilai:</strong> 
                  <span class="nilai-badge">${tugas.nilai || 'Belum dinilai'}</span>
               </div>
               <div style="margin-bottom: 1rem;">
                  <strong>Jawaban Anda:</strong><br>
                  <div style="background: #f8f9fa; padding: 1rem; border-radius: 5px; margin-top: 0.5rem;">
                     ${tugas.jawaban || 'Tidak ada jawaban'}
                  </div>
               </div>
               <div style="margin-bottom: 1rem;">
                  <strong>Dikumpulkan pada:</strong> ${formatDateTime(tugas.submitted_at)}
               </div>
            `;
            document.getElementById('tugasForm').style.display = 'none';
            document.getElementById('tugasModal').style.display = 'flex';
         }
      }

      async function submitTugas() {
         const jawaban = document.getElementById('tugasJawaban').value.trim();

         if (!jawaban) {
            showAlert('Jawaban tidak boleh kosong', 'error');
            return;
         }

         try {
            await apiCall(`/siswa/tugas/${currentData.currentTugasId}/submit`, {
               method: 'POST',
               body: JSON.stringify({ jawaban })
            });

            showAlert('Tugas berhasil dikumpulkan!');
            closeModal();
            loadTugasList();
            loadDashboardData();
         } catch (error) {
            console.error('Error submitting tugas:', error);
         }
      }

      // Nilai functions
      async function loadNilaiData() {
         try {
            const response = await apiCall('/siswa/nilai');
            displayNilaiSummary(response.summary);
            displayNilaiDetail(response.detail);
         } catch (error) {
            document.getElementById('nilaiSummary').innerHTML = '<div class="empty-state">Gagal memuat data nilai</div>';
            document.getElementById('detailNilai').innerHTML = '<div class="empty-state">Gagal memuat detail nilai</div>';
         }
      }

      function displayNilaiSummary(summary) {
         const container = document.getElementById('nilaiSummary');

         container.innerHTML = `
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(150px, 1fr)); gap: 1rem;">
               <div style="text-align: center; padding: 1rem; background: #f8f9ff; border-radius: 8px;">
                  <div style="font-size: 1.5rem; font-weight: bold; color: #3498db;">${summary.total_tugas || 0}</div>
                  <div style="color: #666; font-size: 0.9rem;">Total Tugas</div>
               </div>
               <div style="text-align: center; padding: 1rem; background: #f8f9ff; border-radius: 8px;">
                  <div style="font-size: 1.5rem; font-weight: bold; color: #27ae60;">${summary.tugas_selesai || 0}</div>
                  <div style="color: #666; font-size: 0.9rem;">Tugas Selesai</div>
               </div>
               <div style="text-align: center; padding: 1rem; background: #f8f9ff; border-radius: 8px;">
                  <div style="font-size: 1.5rem; font-weight: bold; color: #e67e22;">${summary.rata_nilai || 0}</div>
                  <div style="color: #666; font-size: 0.9rem;">Rata-rata Nilai</div>
               </div>
            </div>
         `;
      }

      function displayNilaiDetail(detailList) {
         const container = document.getElementById('detailNilai');

         if (!detailList || detailList.length === 0) {
            container.innerHTML = '<div class="empty-state">Belum ada nilai tersedia</div>';
            return;
         }

         container.innerHTML = detailList.map(item => `
            <div style="background: #f8f9ff; border: 1px solid #e1e5e9; border-radius: 8px; padding: 1rem; margin-bottom: 1rem;">
               <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.5rem;">
                  <strong>${item.tugas_judul}</strong>
                  <span class="nilai-badge">${item.nilai}</span>
               </div>
               <div style="color: #666; margin-bottom: 0.5rem;">
                  <strong>Materi:</strong> ${item.materi_judul}
               </div>
               <div style="color: #666; margin-bottom: 0.5rem;">
                  <strong>Status:</strong> ${item.status.replace('_', ' ')}
               </div>
               <div style="color: #666; margin-bottom: 0.5rem;">
                  <strong>Dikumpulkan:</strong> ${formatDateTime(item.submitted_at)}
               </div>
               ${item.feedback ? `
                  <div style="background: white; padding: 0.75rem; border-radius: 5px; border-left: 3px solid #3498db;">
                     <strong>Feedback:</strong> ${item.feedback}
                  </div>
               ` : ''}
            </div>
         `).join('');
      }

      // Diskusi functions
      async function loadDiskusiData() {
         try {
            const [kelasResponse, materiResponse] = await Promise.all([
               apiCall('/siswa/diskusi/kelas'),
               apiCall('/siswa/diskusi/materi')
            ]);

            displayDiskusiKelas(kelasResponse.data);
            displayDiskusiMateri(materiResponse.data);
         } catch (error) {
            document.getElementById('diskusiKelas').innerHTML = '<div class="empty-state">Gagal memuat diskusi kelas</div>';
            document.getElementById('diskusiMateri').innerHTML = '<div class="empty-state">Gagal memuat diskusi materi</div>';
         }
      }

      function displayDiskusiKelas(diskusiList) {
         const container = document.getElementById('diskusiKelas');

         if (!diskusiList || diskusiList.length === 0) {
            container.innerHTML = '<div class="empty-state">Belum ada diskusi kelas</div>';
            return;
         }

         container.innerHTML = `
            <div class="diskusi-container">
               ${diskusiList.map(diskusi => `
                  <div class="diskusi-item">
                     <div class="diskusi-header">
                        <span class="diskusi-user">${diskusi.user_nama} (${diskusi.user_role})</span>
                        <span class="diskusi-date">${formatDateTime(diskusi.created_at)}</span>
                     </div>
                     <div class="diskusi-content">${diskusi.isi}</div>
                  </div>
               `).join('')}
            </div>
         `;
      }

      function displayDiskusiMateri(diskusiList) {
         const container = document.getElementById('diskusiMateri');

         if (!diskusiList || diskusiList.length === 0) {
            container.innerHTML = '<div class="empty-state">Belum ada diskusi materi</div>';
            return;
         }

         container.innerHTML = `
            <div class="diskusi-container">
               ${diskusiList.map(diskusi => `
                  <div class="diskusi-item">
                     <div class="diskusi-header">
                        <span class="diskusi-user">${diskusi.user_nama} (${diskusi.user_role})</span>
                        <span class="diskusi-date">${formatDateTime(diskusi.created_at)}</span>
                     </div>
                     <div style="color: #3498db; font-size: 0.9rem; margin-bottom: 0.5rem;">
                        Materi: ${diskusi.materi_judul}
                     </div>
                     <div class="diskusi-content">${diskusi.isi}</div>
                  </div>
               `).join('')}
            </div>
         `;
      }

      async function loadMateriOptions() {
         const select = document.getElementById('diskusiMateriSelect');
         select.innerHTML = '<option value="">-- Pilih Materi --</option>';

         try {
            if (currentData.materi.length === 0) {
               const response = await apiCall('/siswa/materi');
               currentData.materi = response.data;
            }

            currentData.materi.forEach(materi => {
               const option = document.createElement('option');
               option.value = materi.id;
               option.textContent = materi.judul;
               select.appendChild(option);
            });
         } catch (error) {
            console.error('Error loading materi options:', error);
         }
      }

      // Progress functions
      async function loadProgressDetail() {
         try {
            const response = await apiCall('/siswa/progress');
            displayProgressDetail(response);
         } catch (error) {
            document.getElementById('progressDetail').innerHTML = '<div class="empty-state">Gagal memuat detail progress</div>';
         }
      }

      function displayProgressDetail(progressData) {
         const container = document.getElementById('progressDetail');

         container.innerHTML = `
            <div style="margin-bottom: 2rem;">
               <h3 style="color: #3498db; margin-bottom: 1rem;">Progress Keseluruhan</h3>
               <div class="progress-bar" style="height: 30px;">
                  <div class="progress-fill" style="width: ${progressData.overall_progress}%; font-size: 1rem;">
                     ${progressData.overall_progress}%
                  </div>
               </div>
            </div>
            
            <div style="margin-bottom: 2rem;">
               <h3 style="color: #3498db; margin-bottom: 1rem;">Progress per Materi</h3>
               ${progressData.materi_progress?.map(materi => `
                  <div style="background: white; padding: 1rem; margin-bottom: 1rem; border-radius: 8px; border: 1px solid #e1e5e9;">
                     <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 0.5rem;">
                        <strong>${materi.judul}</strong>
                        <span style="color: #666;">${materi.tugas_completed}/${materi.tugas_total} tugas</span>
                     </div>
                     <div class="progress-bar" style="height: 20px;">
                        <div class="progress-fill" style="width: ${materi.progress}%">${materi.progress}%</div>
                     </div>
                  </div>
               `).join('') || '<div class="empty-state">Tidak ada data progress materi</div>'}
            </div>
            
            ${progressData.achievement ? `
               <div>
                  <h3 style="color: #3498db; margin-bottom: 1rem;">Pencapaian</h3>
                  <div style="background: #f8f9ff; padding: 1rem; border-radius: 8px;">
                     <div style="margin-bottom: 1rem;">
                        <strong>Total Poin:</strong> ${progressData.achievement.points}
                     </div>
                     <div>
                        <strong>Badge:</strong>
                        ${progressData.achievement.badges?.map(badge => `
                           <span style="background: #3498db; color: white; padding: 0.25rem 0.5rem; border-radius: 15px; font-size: 0.8rem; margin-left: 0.5rem;">
                              ${badge}
                           </span>
                        `).join('') || 'Belum ada badge'}
                     </div>
                  </div>
               </div>
            ` : ''}
         `;
      }

      // Modal functions
      function closeModal() {
         document.getElementById('tugasModal').style.display = 'none';
         currentData.currentTugasId = null;
      }

      // Form handlers
      document.getElementById('addDiskusiForm').addEventListener('submit', async function (e) {
         e.preventDefault();

         const type = document.getElementById('diskusiType').value;
         const isi = document.getElementById('diskusiIsi').value.trim();
         let target_id = null;

         if (!type || !isi) {
            showAlert('Semua field harus diisi', 'error');
            return;
         }

         if (type === 'materi') {
            target_id = document.getElementById('diskusiMateriSelect').value;
            if (!target_id) {
               showAlert('Pilih materi untuk diskusi', 'error');
               return;
            }
         }

         try {
            await apiCall('/siswa/diskusi', {
               method: 'POST',
               body: JSON.stringify({ type, target_id, isi })
            });

            showAlert('Diskusi berhasil dikirim!');
            this.reset();
            document.getElementById('materiSelectGroup').style.display = 'none';
            loadDiskusiData();
         } catch (error) {
            console.error('Error posting diskusi:', error);
         }
      });

      document.getElementById('diskusiType').addEventListener('change', function () {
         const materiGroup = document.getElementById('materiSelectGroup');
         if (this.value === 'materi') {
            materiGroup.style.display = 'block';
         } else {
            materiGroup.style.display = 'none';
         }
      });

      // Auth functions
      async function logout() {
         try {
            await apiCall('/logout', { method: 'POST' });
            window.location.href = '/login';
         } catch (error) {
            window.location.href = '/login';
         }
      }

      // Modal click outside to close
      document.getElementById('tugasModal').addEventListener('click', function (e) {
         if (e.target === this) {
            closeModal();
         }
      });

      // Initialize
      document.addEventListener('DOMContentLoaded', function () {
         loadDashboardData();
      });
   </script>
</body>

</html>