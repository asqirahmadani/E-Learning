<!DOCTYPE html>
<html lang="id">

<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>
      <%= title %>
   </title>
   <style>
      * {
         margin: 0;
         padding: 0;
         box-sizing: border-box;
      }

      body {
         font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
         background: #f5f7fa;
         min-height: 100vh;
      }

      .header {
         background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
         color: white;
         padding: 1rem 2rem;
         display: flex;
         justify-content: space-between;
         align-items: center;
         box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
      }

      .user-info {
         display: flex;
         align-items: center;
         gap: 1rem;
      }

      .logout-btn {
         background: rgba(255, 255, 255, 0.2);
         border: 1px solid rgba(255, 255, 255, 0.3);
         color: white;
         padding: 0.5rem 1rem;
         border-radius: 5px;
         cursor: pointer;
         transition: background 0.3s;
      }

      .logout-btn:hover {
         background: rgba(255, 255, 255, 0.3);
      }

      .main-content {
         display: grid;
         grid-template-columns: 250px 1fr;
         min-height: calc(100vh - 80px);
      }

      .sidebar {
         background: white;
         box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
         padding: 2rem 0;
      }

      .nav-item {
         padding: 1rem 2rem;
         cursor: pointer;
         transition: all 0.3s;
         border-left: 3px solid transparent;
      }

      .nav-item:hover,
      .nav-item.active {
         background: #f8f9ff;
         border-left-color: #667eea;
         color: #667eea;
      }

      .content-area {
         padding: 2rem;
      }

      .page-section {
         display: none;
      }

      .page-section.active {
         display: block;
      }

      .stats-grid {
         display: grid;
         grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
         gap: 1.5rem;
         margin-bottom: 2rem;
      }

      .stat-card {
         background: white;
         padding: 2rem;
         border-radius: 10px;
         box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
         text-align: center;
      }

      .stat-value {
         font-size: 2.5rem;
         font-weight: bold;
         color: #667eea;
         margin-bottom: 0.5rem;
      }

      .stat-label {
         color: #666;
         font-size: 0.9rem;
      }

      .card {
         background: white;
         border-radius: 10px;
         padding: 2rem;
         margin-bottom: 1.5rem;
         box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      }

      .card-title {
         font-size: 1.2rem;
         font-weight: 600;
         color: #333;
         margin-bottom: 1rem;
      }

      .form-group {
         margin-bottom: 1rem;
      }

      .form-group label {
         display: block;
         margin-bottom: 0.5rem;
         color: #333;
         font-weight: 500;
      }

      .form-group input,
      .form-group select,
      .form-group textarea {
         width: 100%;
         padding: 0.75rem;
         border: 2px solid #e1e5e9;
         border-radius: 5px;
         font-size: 1rem;
      }

      .btn {
         background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
         color: white;
         border: none;
         padding: 0.75rem 1.5rem;
         border-radius: 5px;
         cursor: pointer;
         font-weight: 600;
         transition: transform 0.2s;
      }

      .btn:hover {
         transform: translateY(-2px);
      }

      .btn-danger {
         background: linear-gradient(135deg, #e74c3c 0%, #c0392b 100%);
      }

      .btn-success {
         background: linear-gradient(135deg, #27ae60 0%, #229954 100%);
      }

      .table {
         width: 100%;
         border-collapse: collapse;
         margin-top: 1rem;
      }

      .table th,
      .table td {
         padding: 1rem;
         text-align: left;
         border-bottom: 1px solid #e1e5e9;
      }

      .table th {
         background: #f8f9ff;
         color: #667eea;
         font-weight: 600;
      }

      .status-active {
         background: #27ae60;
         color: white;
         padding: 0.25rem 0.5rem;
         border-radius: 15px;
         font-size: 0.8rem;
      }

      .status-inactive {
         background: #e74c3c;
         color: white;
         padding: 0.25rem 0.5rem;
         border-radius: 15px;
         font-size: 0.8rem;
      }

      .chart-container {
         width: 100%;
         height: 300px;
         background: white;
         border-radius: 10px;
         padding: 1rem;
         display: flex;
         align-items: center;
         justify-content: center;
         color: #666;
      }

      .alert {
         padding: 1rem;
         border-radius: 5px;
         margin-bottom: 1rem;
         display: none;
      }

      .alert-success {
         background: #d4edda;
         color: #155724;
         border: 1px solid #c3e6cb;
      }

      .alert-error {
         background: #f8d7da;
         color: #721c24;
         border: 1px solid #f5c6cb;
      }

      .tugas-list {
         display: flex;
         flex-direction: column;
         gap: 1rem;
      }

      .tugas-item {
         background: #f8f9ff;
         border: 1px solid #e1e5e9;
         border-radius: 8px;
         padding: 1rem;
      }

      .tugas-info {
         display: flex;
         justify-content: space-between;
         align-items: center;
         margin-bottom: 0.5rem;
      }

      .tugas-info h4 {
         margin: 0;
         color: #333;
         font-size: 1rem;
      }

      .status-badge {
         padding: 0.25rem 0.75rem;
         border-radius: 15px;
         font-size: 0.8rem;
         font-weight: 600;
         text-transform: capitalize;
      }

      .status-belum_dikerjakan {
         background: #ffeaa7;
         color: #d63031;
      }

      .status-dikerjakan {
         background: #74b9ff;
         color: white;
      }

      .status-selesai {
         background: #00b894;
         color: white;
      }

      .tugas-nilai {
         font-weight: bold;
         color: #667eea;
         margin-top: 0.5rem;
      }

      .tugas-hasil {
         color: #666;
         font-style: italic;
         margin-top: 0.25rem;
      }

      .diskusi-list {
         display: flex;
         flex-direction: column;
         gap: 1rem;
      }

      .diskusi-item {
         background: #f8f9ff;
         border: 1px solid #e1e5e9;
         border-radius: 8px;
         padding: 1rem;
      }

      .diskusi-header {
         display: flex;
         justify-content: space-between;
         align-items: center;
         margin-bottom: 0.75rem;
      }

      .diskusi-header strong {
         color: #667eea;
         font-size: 0.9rem;
      }

      .diskusi-date {
         color: #666;
         font-size: 0.8rem;
      }

      .diskusi-content {
         color: #333;
         line-height: 1.5;
         background: white;
         padding: 0.75rem;
         border-radius: 5px;
         border-left: 3px solid #667eea;
      }

      .loading {
         text-align: center;
         padding: 2rem;
         color: #666;
      }

      .empty-state {
         text-align: center;
         padding: 2rem;
         color: #666;
      }
   </style>
</head>

<body>
   <div class="header">
      <div>
         <h1>Dashboard Kepala Sekolah</h1>
         <p>Sistem Manajemen E-Learning</p>
      </div>
      <div class="user-info">
         <span>Selamat datang, <%= user.nama %></span>
         <button class="logout-btn" onclick="logout()">Logout</button>
      </div>
   </div>

   <div class="main-content">
      <div class="sidebar">
         <div class="nav-item active" onclick="showSection('dashboard')">üìä Dashboard</div>
         <div class="nav-item" onclick="showSection('guru-management')">üë®‚Äçüè´ Manajemen Guru</div>
         <div class="nav-item" onclick="showSection('siswa-management')">üë®‚Äçüéì Manajemen Siswa</div>
         <div class="nav-item" onclick="showSection('materi-management')">üìö Materi Pembelajaran</div>
         <div class="nav-item" onclick="showSection('diskusi-management')">üí¨ Diskusi Kelas</div>
      </div>

      <div class="content-area">
         <div id="alert" class="alert">
            <span id="alertMessage"></span>
         </div>

         <div id="dashboard" class="page-section active">
            <h2>Ringkasan Sistem</h2>

            <div class="stats-grid">
               <div class="stat-card">
                  <div class="stat-value" id="totalGuru">-</div>
                  <div class="stat-label">Total Guru</div>
               </div>
               <div class="stat-card">
                  <div class="stat-value" id="totalSiswa">-</div>
                  <div class="stat-label">Total Siswa</div>
               </div>
               <div class="stat-card">
                  <div class="stat-value" id="totalKelas">-</div>
                  <div class="stat-label">Total Kelas</div>
               </div>
               <div class="stat-card">
                  <div class="stat-value" id="totalMateri">-</div>
                  <div class="stat-label">Materi Pembelajaran</div>
               </div>
            </div>

            <div class="card">
               <div class="card-title">Aktivitas Terbaru</div>
               <div id="recentActivity" class="loading">Memuat aktivitas...</div>
            </div>
         </div>

         <div id="guru-management" class="page-section">
            <h2>Manajemen Guru</h2>

            <div class="card">
               <div class="card-title">Tambah Guru Baru</div>
               <form id="addGuruForm">
                  <div class="form-group">
                     <label for="guruNama">Nama Lengkap</label>
                     <input type="text" id="guruNama" name="nama" required>
                  </div>
                  <div class="form-group">
                     <label for="guruEmail">Email</label>
                     <input type="email" id="guruEmail" name="email" required>
                  </div>
                  <div class="form-group">
                     <label for="guruPassword">Password</label>
                     <input type="password" id="guruPassword" name="password" required>
                  </div>
                  <div class="form-group">
                     <label for="guruBidang">Bidang</label>
                     <input type="text" id="guruBidang" name="bidang" placeholder="e.g., Matematika" required>
                  </div>
                  <button type="submit" class="btn">Tambah Guru</button>
               </form>
            </div>

            <div class="card">
               <div class="card-title">Daftar Guru</div>
               <div class="loading" id="guruLoading">Memuat data guru...</div>
               <table class="table" id="guruTable" style="display: none;">
                  <thead>
                     <tr>
                        <th>Nama</th>
                        <th>Email</th>
                        <th>Bidang</th>
                        <th>Status</th>
                        <th>Aksi</th>
                     </tr>
                  </thead>
                  <tbody id="guruTableBody"></tbody>
               </table>
            </div>
         </div>

         <div id="siswa-management" class="page-section">
            <h2>Manajemen Siswa</h2>

            <div class="card">
               <div class="card-title">Daftar Siswa</div>
               <div class="loading" id="siswaLoading">Memuat data siswa...</div>
               <table class="table" id="siswaTable" style="display: none;">
                  <thead>
                     <tr>
                        <th>Nama</th>
                        <th>Email</th>
                        <th>Kelas</th>
                        <th>Status</th>
                        <th>Aksi</th>
                     </tr>
                  </thead>
                  <tbody id="siswaTableBody"></tbody>
               </table>
            </div>
         </div>

         <div id="materi-management" class="page-section">
            <h2>Manajemen Materi</h2>

            <div class="card">
               <div class="card-title">Daftar Materi Pembelajaran</div>
               <div class="loading" id="materiLoading">Memuat data materi...</div>
               <table class="table" id="materiTable" style="display: none;">
                  <thead>
                     <tr>
                        <th>Judul Materi</th>
                        <th>Guru Pengampu</th>
                        <th>Tanggal Dibuat</th>
                        <th>Aksi</th>
                     </tr>
                  </thead>
                  <tbody id="materiTableBody"></tbody>
               </table>
            </div>
         </div>

         <div id="diskusi-management" class="page-section">
            <h2>Manajemen Diskusi</h2>

            <div class="card">
               <div class="card-title">Tambah Diskusi Kelas</div>
               <form id="addDiskusiForm">
                  <div class="form-group">
                     <label for="diskusiKelas">Kelas</label>
                     <input type="text" id="diskusiKelas" name="kelas" placeholder="e.g., Kelas 1" required>
                  </div>
                  <div class="form-group">
                     <label for="diskusiIsi">Isi Diskusi</label>
                     <textarea id="diskusiIsi" name="isi" rows="4" required></textarea>
                  </div>
                  <button type="submit" class="btn">Tambah Diskusi</button>
               </form>
            </div>

            <div class="card">
               <div class="card-title">Daftar Diskusi Kelas</div>
               <div class="loading" id="diskusiLoading">Memuat data diskusi...</div>
               <table class="table" id="diskusiTable" style="display: none;">
                  <thead>
                     <tr>
                        <th>Kelas</th>
                        <th>Isi</th>
                        <th>Pengguna</th>
                        <th>Tanggal</th>
                     </tr>
                  </thead>
                  <tbody id="diskusiTableBody"></tbody>
               </table>
            </div>
         </div>
      </div>
   </div>

   <script>
      let dashboardData = null;

      function showAlert(message, type = 'success') {
         const alert = document.getElementById('alert');
         const alertMessage = document.getElementById('alertMessage');

         alert.className = `alert alert-${type}`;
         alertMessage.textContent = message;
         alert.style.display = 'block';

         setTimeout(() => {
            alert.style.display = 'none';
         }, 5000);
      }

      function showSection(sectionId) {
         document.querySelectorAll('.page-section').forEach(section => {
            section.classList.remove('active');
         });
         document.querySelectorAll('.nav-item').forEach(item => {
            item.classList.remove('active');
         });

         document.getElementById(sectionId).classList.add('active');
         event.target.classList.add('active');

         if (sectionId === 'guru-management') {
            loadGuruList();
         } else if (sectionId === 'siswa-management') {
            loadSiswaList();
         } else if (sectionId === 'materi-management') {
            loadMateriList();
         } else if (sectionId === 'diskusi-management') {
            loadDiskusiList();
         }
      }

      async function loadDashboardData() {
         try {
            const response = await fetch('/kepsek/dashboard/stats', {
               method: 'GET',
               credentials: 'include'
            });

            if (response.ok) {
               const result = await response.json();
               if (result.success) {
                  dashboardData = result.data;
                  updateStatistics();
               }
            }

            loadRecentActivity();
         } catch (error) {
            console.error('Error loading dashboard:', error);
            showAlert('Terjadi kesalahan saat memuat dashboard', 'error');
         }
      }

      function updateStatistics() {
         if (dashboardData) {
            document.getElementById('totalGuru').textContent = dashboardData.jumlah_guru || 0;
            document.getElementById('totalSiswa').textContent = dashboardData.jumlah_siswa || 0;
            document.getElementById('totalKelas').textContent = dashboardData.jumlah_kelas || 0;
            document.getElementById('totalMateri').textContent = dashboardData.jumlah_materi || 0;
         }
      }

      async function loadRecentActivity() {
         try {
            const response = await fetch('/kepsek/dashboard/activity', {
               method: 'GET',
               credentials: 'include'
            });

            if (response.ok) {
               const result = await response.json();
               const container = document.getElementById('recentActivity');

               if (result.success && result.data.length > 0) {
                  container.innerHTML = result.data.map(activity => `
                     <div style="padding: 0.5rem 0; border-bottom: 1px solid #eee;">
                        <strong>${activity.title}</strong> - ${activity.description}
                        <div style="font-size: 0.8rem; color: #666;">${new Date(activity.created_at).toLocaleDateString('id-ID')}</div>
                     </div>
                  `).join('');
               } else {
                  container.innerHTML = '<div class="empty-state">Tidak ada aktivitas terbaru</div>';
               }
            }
         } catch (error) {
            document.getElementById('recentActivity').innerHTML = '<div class="empty-state">Error memuat aktivitas</div>';
         }
      }

      async function loadGuruList() {
         const container = document.getElementById('guruTableBody');
         const loading = document.getElementById('guruLoading');
         const table = document.getElementById('guruTable');

         try {
            const response = await fetch('/kepsek/guru', {
               method: 'GET',
               credentials: 'include'
            });

            if (response.ok) {
               const result = await response.json();

               if (result.success) {
                  loading.style.display = 'none';
                  table.style.display = 'table';

                  container.innerHTML = result.data.map(guru => `
                     <tr>
                        <td>${guru.nama}</td>
                        <td>${guru.email}</td>
                        <td>${guru.bidang || '-'}</td>
                        <td><span class="status-${guru.status}">${guru.status}</span></td>
                        <td>
                            <button class="btn ${guru.status === 'active' ? 'btn-danger' : 'btn-success'}" 
                                    onclick="toggleGuruStatus(${guru.id}, '${guru.status}')">
                                ${guru.status === 'active' ? 'Nonaktifkan' : 'Aktifkan'}
                            </button>
                        </td>
                     </tr>
                  `).join('');
               }
            }
         } catch (error) {
            console.error('Error loading guru list:', error);
            loading.innerHTML = '<div class="empty-state">Gagal memuat data guru</div>';
         }
      }

      async function loadSiswaList() {
         const container = document.getElementById('siswaTableBody');
         const loading = document.getElementById('siswaLoading');
         const table = document.getElementById('siswaTable');

         try {
            const response = await fetch('/kepsek/siswa', {
               method: 'GET',
               credentials: 'include'
            });

            if (response.ok) {
               const result = await response.json();

               if (result.success) {
                  loading.style.display = 'none';
                  table.style.display = 'table';

                  container.innerHTML = result.data.map(siswa => `
                     <tr>
                        <td>${siswa.nama}</td>
                        <td>${siswa.email}</td>
                        <td>${siswa.kelas_nama || 'Belum terdaftar'}</td>
                        <td><span class="status-${siswa.status}">${siswa.status}</span></td>
                        <td>
                            <button class="btn" onclick="viewSiswaProgress(${siswa.id})">
                                Lihat Progress
                            </button>
                        </td>
                     </tr>
                  `).join('');
               }
            }
         } catch (error) {
            console.error('Error loading siswa list:', error);
            loading.innerHTML = '<div class="empty-state">Gagal memuat data siswa</div>';
         }
      }

      async function loadMateriList() {
         const container = document.getElementById('materiTableBody');
         const loading = document.getElementById('materiLoading');
         const table = document.getElementById('materiTable');

         try {
            const response = await fetch('/kepsek/materi', {
               method: 'GET',
               credentials: 'include'
            });

            if (response.ok) {
               const result = await response.json();

               if (result.success) {
                  loading.style.display = 'none';
                  table.style.display = 'table';

                  container.innerHTML = result.data.map(materi => `
                     <tr>
                        <td>${materi.judul}</td>
                        <td>${materi.guru}</td>
                        <td>${new Date(materi.created_at).toLocaleDateString('id-ID')}</td>
                        <td>
                            <button class="btn" onclick="viewMateriDetail(${materi.id})">
                                Lihat Detail
                            </button>
                        </td>
                     </tr>
                  `).join('');
               }
            }
         } catch (error) {
            console.error('Error loading materi list:', error);
            loading.innerHTML = '<div class="empty-state">Gagal memuat data materi</div>';
         }
      }

      async function loadDiskusiList() {
         const container = document.getElementById('diskusiTableBody');
         const loading = document.getElementById('diskusiLoading');
         const table = document.getElementById('diskusiTable');

         try {
            const response = await fetch('/kepsek/diskusi', {
               method: 'GET',
               credentials: 'include'
            });

            if (response.ok) {
               const result = await response.json();

               if (result.success) {
                  loading.style.display = 'none';
                  table.style.display = 'table';

                  container.innerHTML = result.data.map(diskusi => `
                     <tr>
                        <td>${diskusi.kelas}</td>
                        <td>${diskusi.isi.length > 50 ? diskusi.isi.substring(0, 50) + '...' : diskusi.isi}</td>
                        <td>${diskusi.user} (${diskusi.role})</td>
                        <td>${new Date(diskusi.created_at).toLocaleDateString('id-ID')}</td>
                     </tr>
                  `).join('');
               }
            }
         } catch (error) {
            console.error('Error loading diskusi list:', error);
            loading.innerHTML = '<div class="empty-state">Gagal memuat data diskusi</div>';
         }
      }

      document.getElementById('addGuruForm').addEventListener('submit', async function (e) {
         e.preventDefault();

         const formData = new FormData(this);
         const guruData = {
            nama: formData.get('nama'),
            email: formData.get('email'),
            password: formData.get('password'),
            bidang: formData.get('bidang')
         };

         try {
            const response = await fetch('/kepsek/guru', {
               method: 'POST',
               headers: {
                  'Content-Type': 'application/json'
               },
               credentials: 'include',
               body: JSON.stringify(guruData)
            });

            const result = await response.json();

            if (response.ok && result.success) {
               showAlert('Guru berhasil ditambahkan!');
               this.reset();
               loadGuruList();
               loadDashboardData();
            } else {
               showAlert('Error: ' + (result.error || 'Gagal menambah guru'), 'error');
            }
         } catch (error) {
            console.error('Error adding guru:', error);
            showAlert('Terjadi kesalahan saat menambah guru', 'error');
         }
      });

      document.getElementById('addDiskusiForm').addEventListener('submit', async function (e) {
         e.preventDefault();

         const formData = new FormData(this);
         const diskusiData = {
            kelas: formData.get('kelas'),
            isi: formData.get('isi')
         };

         try {
            const response = await fetch('/kepsek/diskusi', {
               method: 'POST',
               headers: {
                  'Content-Type': 'application/json'
               },
               credentials: 'include',
               body: JSON.stringify(diskusiData)
            });

            const result = await response.json();

            if (response.ok && result.success) {
               showAlert('Diskusi berhasil ditambahkan!');
               this.reset();
               loadDiskusiList();
            } else {
               showAlert('Error: ' + (result.error || 'Gagal menambah diskusi'), 'error');
            }
         } catch (error) {
            console.error('Error adding diskusi:', error);
            showAlert('Terjadi kesalahan saat menambah diskusi', 'error');
         }
      });

      async function toggleGuruStatus(userId, currentStatus) {
         const newStatus = currentStatus === 'active' ? 'inactive' : 'active';

         try {
            const response = await fetch(`/kepsek/guru/${userId}/status`, {
               method: 'PATCH',
               headers: {
                  'Content-Type': 'application/json'
               },
               credentials: 'include',
               body: JSON.stringify({ status: newStatus })
            });

            const result = await response.json();

            if (response.ok && result.success) {
               showAlert(`Status guru berhasil diubah menjadi ${newStatus}`);
               loadGuruList();
            } else {
               showAlert('Error: ' + (result.error || 'Gagal mengubah status'), 'error');
            }
         } catch (error) {
            console.error('Error updating user status:', error);
            showAlert('Terjadi kesalahan saat mengubah status', 'error');
         }
      }

      function viewSiswaProgress(siswaId) {
         alert(`Fitur melihat progress siswa ${siswaId} akan segera tersedia`);
      }

      function viewMateriDetail(materiId) {
         alert(`Fitur melihat detail materi ${materiId} akan segera tersedia`);
      }

      async function logout() {
         try {
            const response = await fetch('/auth/logout', {
               method: 'POST',
               credentials: 'include'
            });

            window.location.href = '/auth/login';
         } catch (error) {
            console.error('Logout error:', error);
            window.location.href = '/auth/login';
         }
      }

      document.addEventListener('DOMContentLoaded', function () {
         loadDashboardData();
      });
   </script>
</body>

</html>