<!DOCTYPE html>
<html lang="id">

<head>
   <meta charset="UTF-8">
   <meta name="viewport" content="width=device-width, initial-scale=1.0">
   <title>Daftar - E-Learning</title>
   <style>
      * {
         margin: 0;
         padding: 0;
         box-sizing: border-box;
      }

      body {
         font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
         background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
         min-height: 100vh;
         display: flex;
         justify-content: center;
         align-items: center;
         padding: 2rem 1rem;
      }

      .container {
         background: white;
         padding: 2rem;
         border-radius: 10px;
         box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
         width: 100%;
         max-width: 450px;
      }

      .logo {
         text-align: center;
         margin-bottom: 2rem;
      }

      .logo h1 {
         color: #333;
         font-size: 2rem;
         margin-bottom: 0.5rem;
      }

      .logo p {
         color: #666;
         font-size: 0.9rem;
      }

      .form-group {
         margin-bottom: 1.5rem;
      }

      label {
         display: block;
         margin-bottom: 0.5rem;
         color: #333;
         font-weight: 500;
      }

      input[type="text"],
      input[type="email"],
      input[type="password"],
      select {
         width: 100%;
         padding: 0.75rem;
         border: 2px solid #e1e5e9;
         border-radius: 5px;
         font-size: 1rem;
         transition: border-color 0.3s ease;
      }

      input[type="text"]:focus,
      input[type="email"]:focus,
      input[type="password"]:focus,
      select:focus {
         outline: none;
         border-color: #667eea;
      }

      .btn {
         width: 100%;
         padding: 0.75rem;
         background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
         color: white;
         border: none;
         border-radius: 5px;
         font-size: 1rem;
         font-weight: 600;
         cursor: pointer;
         transition: transform 0.2s ease;
      }

      .btn:hover {
         transform: translateY(-2px);
      }

      .btn:disabled {
         background: #ccc;
         cursor: not-allowed;
         transform: none;
      }

      .login-link {
         text-align: center;
         margin-top: 1.5rem;
         padding-top: 1.5rem;
         border-top: 1px solid #e1e5e9;
      }

      .login-link a {
         color: #667eea;
         text-decoration: none;
         font-weight: 500;
      }

      .login-link a:hover {
         text-decoration: underline;
      }

      .error {
         color: #e74c3c;
         font-size: 0.9rem;
         margin-top: 0.5rem;
         display: none;
         padding: 0.5rem;
         background-color: #fdf2f2;
         border-radius: 3px;
         border-left: 4px solid #e74c3c;
      }

      .success {
         color: #27ae60;
         font-size: 0.9rem;
         margin-top: 0.5rem;
         display: none;
         padding: 0.5rem;
         background-color: #f2fdf5;
         border-radius: 3px;
         border-left: 4px solid #27ae60;
      }

      .password-requirements {
         font-size: 0.8rem;
         color: #666;
         margin-top: 0.5rem;
      }

      .password-requirements ul {
         margin: 0.5rem 0;
         padding-left: 1.2rem;
      }

      .password-requirements li {
         margin: 0.2rem 0;
      }

      .requirement-met {
         color: #27ae60;
      }

      .requirement-not-met {
         color: #e74c3c;
      }

      .loading {
         display: inline-block;
         width: 20px;
         height: 20px;
         border: 3px solid rgba(255,255,255,.3);
         border-radius: 50%;
         border-top-color: #fff;
         animation: spin 1s ease-in-out infinite;
         margin-right: 10px;
      }

      @keyframes spin {
         to { transform: rotate(360deg); }
      }

      .form-note {
         font-size: 0.8rem;
         color: #666;
         margin-top: 0.25rem;
         font-style: italic;
      }
   </style>
</head>

<body>
   <div class="container">
      <div class="logo">
         <h1>E-Learning</h1>
         <p>Buat akun siswa baru</p>
      </div>

      <form id="registerForm">
         <div class="form-group">
            <label for="nama">Nama Lengkap:</label>
            <input type="text" id="nama" name="nama" required>
            <div class="error" id="namaError"></div>
         </div>

         <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
            <div class="error" id="emailError"></div>
         </div>

         <div class="form-group">
            <label for="kelas_id">Pilih Kelas:</label>
            <select id="kelas_id" name="kelas_id" required>
               <option value="">-- Pilih Kelas --</option>
               
            </select>
            <div class="form-note">Silakan pilih kelas yang sesuai</div>
            <div class="error" id="kelasError"></div>
         </div>

         <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" name="password" required>
            <div class="password-requirements">
               <p>Password harus memenuhi syarat:</p>
               <ul>
                  <li id="lengthReq" class="requirement-not-met">Minimal 6 karakter</li>
                  <li id="upperReq" class="requirement-not-met">Mengandung huruf besar</li>
                  <li id="lowerReq" class="requirement-not-met">Mengandung huruf kecil</li>
                  <li id="numberReq" class="requirement-not-met">Mengandung angka</li>
               </ul>
            </div>
            <div class="error" id="passwordError"></div>
         </div>

         <div class="form-group">
            <label for="confirmPassword">Konfirmasi Password:</label>
            <input type="password" id="confirmPassword" name="confirmPassword" required>
            <div class="error" id="confirmPasswordError"></div>
         </div>

         <button type="submit" class="btn" id="submitBtn">
            <span id="submitText">Daftar</span>
            <span id="loadingSpinner" class="loading" style="display: none;"></span>
         </button>

         <div class="error" id="generalError"></div>
         <div class="success" id="generalSuccess"></div>
      </form>

      <div class="login-link">
         <p>Sudah punya akun? <a href="/login">Masuk di sini</a></p>
         <p>Atau ingin daftar sebagai <a href="/register-guru">guru</a>?</p>
      </div>
   </div>

   <script>
      
      let kelasData = [];

      
      async function loadKelasData() {
         try {
            const response = await fetch('/api/kelas');
            if (response.ok) {
               const result = await response.json();
               if (result.success) {
                  kelasData = result.data;
                  populateKelasDropdown();
               } else {
                  showError('generalError', 'Gagal memuat data kelas');
               }
            } else {
               showError('generalError', 'Gagal memuat data kelas');
            }
         } catch (error) {
            console.error('Error loading kelas data:', error);
            showError('generalError', 'Terjadi kesalahan saat memuat data kelas');
         }
      }

      
      function populateKelasDropdown() {
         const select = document.getElementById('kelas_id');
         select.innerHTML = '<option value="">-- Pilih Kelas --</option>';
         
         kelasData.forEach(kelas => {
            const option = document.createElement('option');
            option.value = kelas.id;
            option.textContent = `${kelas.nama} (${kelas.tingkat})`;
            select.appendChild(option);
         });
      }

      
      function showError(elementId, message) {
         const errorDiv = document.getElementById(elementId);
         errorDiv.textContent = message;
         errorDiv.style.display = 'block';
      }

      
      function hideError(elementId) {
         const errorDiv = document.getElementById(elementId);
         errorDiv.style.display = 'none';
         errorDiv.textContent = '';
      }

      
      function showSuccess(message) {
         const successDiv = document.getElementById('generalSuccess');
         successDiv.textContent = message;
         successDiv.style.display = 'block';
      }

      
      function isValidEmail(email) {
         const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
         return emailRegex.test(email);
      }

      
      function validatePassword(password) {
         const errors = [];
         
         if (password.length < 6) {
            errors.push('Password minimal 6 karakter');
         }
         if (!/[A-Z]/.test(password)) {
            errors.push('Password harus mengandung huruf besar');
         }
         if (!/[a-z]/.test(password)) {
            errors.push('Password harus mengandung huruf kecil');
         }
         if (!/\d/.test(password)) {
            errors.push('Password harus mengandung angka');
         }
         
         return errors;
      }

      
      document.getElementById('password').addEventListener('input', function () {
         const password = this.value;
         const errors = validatePassword(password);

         
         document.getElementById('lengthReq').className = password.length >= 6 ? 'requirement-met' : 'requirement-not-met';
         document.getElementById('upperReq').className = /[A-Z]/.test(password) ? 'requirement-met' : 'requirement-not-met';
         document.getElementById('lowerReq').className = /[a-z]/.test(password) ? 'requirement-met' : 'requirement-not-met';
         document.getElementById('numberReq').className = /\d/.test(password) ? 'requirement-met' : 'requirement-not-met';

         
         const errorDiv = document.getElementById('passwordError');
         if (errors.length > 0) {
            errorDiv.textContent = errors.join(', ');
            errorDiv.style.display = 'block';
         } else {
            errorDiv.style.display = 'none';
         }
      });

      
      document.getElementById('confirmPassword').addEventListener('input', function () {
         const password = document.getElementById('password').value;
         const confirmPassword = this.value;
         const errorDiv = document.getElementById('confirmPasswordError');

         if (confirmPassword && password !== confirmPassword) {
            errorDiv.textContent = 'Password tidak cocok';
            errorDiv.style.display = 'block';
         } else {
            errorDiv.style.display = 'none';
         }
      });

      
      document.getElementById('registerForm').addEventListener('submit', async function (e) {
         e.preventDefault();

         
         document.querySelectorAll('.error').forEach(el => el.style.display = 'none');
         document.getElementById('generalSuccess').style.display = 'none';

         
         const nama = document.getElementById('nama').value.trim();
         const email = document.getElementById('email').value.trim();
         const kelas_id = document.getElementById('kelas_id').value;
         const password = document.getElementById('password').value;
         const confirmPassword = document.getElementById('confirmPassword').value;

         
         let isValid = true;

         if (!nama) {
            showError('namaError', 'Nama harus diisi');
            isValid = false;
         }

         if (!email) {
            showError('emailError', 'Email harus diisi');
            isValid = false;
         } else if (!isValidEmail(email)) {
            showError('emailError', 'Format email tidak valid');
            isValid = false;
         }

         if (!kelas_id) {
            showError('kelasError', 'Silakan pilih kelas');
            isValid = false;
         }

         const passwordErrors = validatePassword(password);
         if (passwordErrors.length > 0) {
            showError('passwordError', passwordErrors.join(', '));
            isValid = false;
         }

         if (password !== confirmPassword) {
            showError('confirmPasswordError', 'Password tidak cocok');
            isValid = false;
         }

         if (!isValid) return;

         
         const submitBtn = document.getElementById('submitBtn');
         const submitText = document.getElementById('submitText');
         const loadingSpinner = document.getElementById('loadingSpinner');
         
         submitBtn.disabled = true;
         submitText.textContent = 'Mendaftarkan...';
         loadingSpinner.style.display = 'inline-block';

         
         const formData = new FormData();
         formData.append('nama', nama);
         formData.append('email', email);
         formData.append('kelas_id', kelas_id);
         formData.append('password', password);
         formData.append('confirmPassword', confirmPassword);

         try {
            const response = await fetch('/register', {
               method: 'POST',
               body: formData
            });

            const result = await response.text();

            if (response.ok) {
               showSuccess('Registrasi berhasil! Mengarahkan ke halaman login...');
               
               
               this.reset();
               
               
               document.querySelectorAll('.requirement-met').forEach(el => {
                  el.className = 'requirement-not-met';
               });
               
               
               setTimeout(() => {
                  window.location.href = '/login?message=' + encodeURIComponent('Registrasi berhasil. Silakan login.');
               }, 2000);
            } else {
               
               try {
                  const errorData = JSON.parse(result);
                  showError('generalError', errorData.error || errorData.message || 'Terjadi kesalahan');
               } catch {
                  showError('generalError', result || 'Terjadi kesalahan');
               }
            }
         } catch (error) {
            console.error('Registration error:', error);
            showError('generalError', 'Terjadi kesalahan jaringan. Silakan coba lagi.');
         } finally {
            
            submitBtn.disabled = false;
            submitText.textContent = 'Daftar';
            loadingSpinner.style.display = 'none';
         }
      });

      
      document.addEventListener('DOMContentLoaded', function() {
         loadKelasData();
         
         
         const urlParams = new URLSearchParams(window.location.search);
         const error = urlParams.get('error');
         const formData = urlParams.get('formData');
         
         if (error) {
            showError('generalError', decodeURIComponent(error));
         }
         
         if (formData) {
            try {
               const data = JSON.parse(decodeURIComponent(formData));
               document.getElementById('nama').value = data.nama || '';
               document.getElementById('email').value = data.email || '';
               if (data.kelas_id) {
                  document.getElementById('kelas_id').value = data.kelas_id;
               }
            } catch (e) {
               console.error('Error parsing form data:', e);
            }
         }
      });
   </script>
</body>

</html>