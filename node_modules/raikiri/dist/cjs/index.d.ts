interface RadixNode<T> {
    children: Map<string | number, RadixNode<T>>;
    static?: Record<string, T>;
    store?: T;
    name?: string;
}
export declare class Raikiri<T> {
    root: Record<string, RadixNode<T>>;
    add(method: string, path: string, store: T): void;
    match: (method: string, path: string) => {
        store: T | undefined;
        params: {
            [key: string]: string;
        };
    } | undefined;
}
export default Raikiri;
